@using BlazorHypiness.Constants;
@using BlazorHypiness.Options;
@inherits HypinessComponent

<div class="@CompiledCss">
    @ChildContent
</div>


@code {
    [Parameter, EditorRequired]
    public RenderFragment ChildContent { get; set; } = null!;

    [Parameter, EditorRequired]
    public ContainerTypes ContainerType { get; set; }

    [Parameter]
    public Colors? BackgroundColor { get; set; }

    protected override CssBuilder BuildCss(CssBuilder builder)
    {
        builder.Add(ContainerType switch
        {
            ContainerTypes.Stretched => "hyp-stretched-container",
            ContainerTypes.Padded => "hyp-padded-container",
            _ => Strings.EMPTY_STRING
        });

        if(BackgroundColor is not null)
        {
            builder.Add(BackgroundColor switch
            {
                Colors.Default => "bg-white",
                Colors.Primary => "bg-primary-900",
                Colors.Secondary => "bg-secondary-900",
                Colors.Accent => "bg-accent-900",
                Colors.Error => "bg-error-900",
                Colors.Success => "bg-success-900",
                Colors.Dark => "bg-gray-900",
                _ => Constants.Strings.EMPTY_STRING
            });
        }

        return base.BuildCss(builder);
    }
}